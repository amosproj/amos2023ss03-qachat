name: run-unit-test-and-lint

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'Deliverables/**'
      - 'Documentation/**'
      - 'DummyData/**'
  pull_request:
    branches-ignore:
      - master
    paths-ignore:
      - 'README.md'
      - 'Deliverables/**'
      - 'Documentation/**'
      - 'DummyData/**'

jobs:
  unit-tests-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          pip install -r QAChat/Data_Processing/requirements.txt
          pip install -r QAChat/QA_Bot/requirements.txt
          pip install -r QAChat/Slack_Bot/requirements.txt
          pip install -r Testing/requirements.txt

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd):$(pwd)/amos2023ss03-qachat" >> $GITHUB_ENV

      - name: Run unit tests
        working-directory: ./Testing
        run: pytest -s qa_agent_unit_tests.py

      - name: Run DB Test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL}}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY}}

        working-directory: ./Testing
        run: python db_intergration_test.py

      - name: Run autoformatting
        uses: wearerequired/lint-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          black: true
          auto_fix: true

      - name: Commit and push if it was formatted
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff --exit-code --quiet && echo "No changes to commit" || (git add . && git commit -m "Format Python code with psf/black" && git push)

